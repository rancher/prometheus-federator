name : Publish images, charts and binaries

on:
  push:
    tags:
      - "v*"

env:
  GHCR_REGISTRY: ghcr.io
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  YQ_VERSION: v4.44.3

jobs:
  helm-locker-ci:
    uses: ./.github/workflows/hl-ci.yaml
  helm-project-operator-ci:
    uses: ./.github/workflows/hpo-ci.yaml
    with:
      skip_build: 'true'
  goreleaser:
    name: Build go binaries and helm chart
    runs-on : runs-on,image=ubuntu22-full-x64,runner=4cpu-linux-x64,run-id=${{ github.run_id }}
    needs: [
      helm-locker-ci,
      helm-project-operator-ci,
    ]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - name : setup Go
        uses : actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
        with:
          go-version: 1.22
      - name: Install mikefarah/yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq;
      - uses: azure/setup-kubectl@901a10e89ea615cf61f57ac05cecdf23e7de06d8 # v3
      - name : Install helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare helm charts (needed for build)
        run: |
          BUILD_TARGET=prometheus-federator make package-helm && echo "pf: release chart prepared"
          BUILD_TARGET=prometheus-federator make build-chart && echo "pf: embedded project-monitoring chart prepared"
      - uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
  push-dev-images:
    name : Build and push helm-locker & Helm-Project-Operator images
    runs-on : runs-on,image=ubuntu22-full-x64,runner=4cpu-linux-x64,run-id=${{ github.run_id }}
    needs: [
      helm-locker-ci,
      helm-project-operator-ci,
    ]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name : Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for helm-locker image
        id: meta-locker
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}/helm-locker
      - name: Build and push helm-locker image
        id: push
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5
        with:
          context: .
          file: ./package/Dockerfile-helm-locker
          push: true
          tags: ${{ steps.meta-locker.outputs.tags }}
          labels: ${{ steps.meta-locker.outputs.labels }}
          platforms : linux/amd64,linux/arm64
      - name: Extract metadata (tags, labels) for Helm-Project-Operator image
        id: meta-hpo
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}/helm-project-operator
      - name: Build Helm-Project-Operator image
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5
        with:
          context: .
          file: ./package/Dockerfile-helm-project-operator
          push: true
          tags: ${{ steps.meta-hpo.outputs.tags }}
          labels: ${{ steps.meta-hpo.outputs.labels }}
          platforms: linux/amd64,linux/arm64

  publish-images:
    name: Publish prometheus-federator image
    runs-on: ubuntu-latest
    needs: [
      helm-locker-ci,
      helm-project-operator-ci,
    ]
    permissions:
      contents : read
      id-token: write
    steps:
      - name : "Read Secrets"
        uses : rancher-eio/read-vault-secrets@main
        with:
          secrets: |
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials username | DOCKER_USERNAME ;
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials password | DOCKER_PASSWORD
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name : Export image version
        run : |
          source ./scripts/version
          echo IMAGE=$IMAGE >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3 
      - name: Build Prometheus Federator image 
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5
        with:
          context: .
          file: ./package/Dockerfile-prometheus-federator
          push: true
          tags: ${{ env.IMAGE }}
          platforms: linux/amd64,linux/arm64