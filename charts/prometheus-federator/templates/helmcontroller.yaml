{{- if and (not .Values.helmProjectOperator.helmController.enabled) (.Values.helmController.deployment.enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "prometheus-federator.name" . }}-helm-controller
  namespace: {{ template "prometheus-federator.namespace" . }}
  labels:
    app: {{ template "prometheus-federator.name" . }}-helm-controller
spec:
  replicas: {{ .Values.helmController.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ template "prometheus-federator.name" . }}-helm-controller
  template:
    metadata:
      labels:
        app: {{ template "prometheus-federator.name" . }}-helm-controller
    spec:
      # has to match cluster-admin service account
      serviceAccountName : {{ template "prometheus-federator.name" . }}-helm-controller
      containers:
      - name: helm-controller
        image: {{ template "helm-controller.imageRegistry" . }} {{ .Values.helmController.deployment.image.repository }}:{{ .Values.helmController.deployment.image.tag }}
        command: ["helm-controller"]
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: JOB_CLUSTER_ROLE
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        # this sets the `managedBy` annotations, must match the ones in prometheus-federator
        - name: CONTROLLER_NAME
          value: {{ template "prometheus-federator.name" . }}-helm-controller
        # this sets the `systemNamespace` for the helm-controller to watch, should match the one in prometheus-federator
        - name: NAMESPACE
          value: {{ template "prometheus-federator.namespace" . }}
{{ end }}
