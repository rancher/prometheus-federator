#!/usr/bin/env bash
set -e

source $(dirname $0)/version
source $(dirname $0)/util-chart
source $(dirname $0)/util-team-charts

# We don't do this for helm-locker
if [[ "${BUILD_TARGET}" == "helm-locker" ]]; then
  echo "No build-chart for helm-locker; maybe you meant package-helm"
  exit
fi

cd $(dirname $0)/..

if [ "$BUILD_TARGET" == "prometheus-federator" ]; then
  DEFAULT_CHART_TARGET="rancher-project-monitoring"
elif [ "$BUILD_TARGET" == "helm-project-operator" ]; then
  DEFAULT_CHART_TARGET="project-operator-example"
fi

CHART=${CHART:-${DEFAULT_CHART_TARGET}}

if [ "$BUILD_TARGET" == "prometheus-federator" ]; then
  EMBEDDED_CHART_VERSION="0.3.4" # workaround until ready to remove chart lock
  CHART_VERSION=${EMBEDDED_CHART_VERSION:-$(newest-chart-version "rancher-project-monitoring")}
  # Fetch asset from github OB charts repo
  fetch-team-chart "rancher-project-monitoring" "$CHART_VERSION"
  CHART_DESTINATION="./build/charts/${CHART}-${CHART_VERSION}.tgz"

  # Prepare chart for embedding location
  base64 -i "${CHART_DESTINATION}" > "cmd/${BUILD_TARGET}/fs/${CHART}.tgz.base64"
elif [ "$BUILD_TARGET" == "helm-project-operator" ]; then
  # Prepare base chart for build
  clean-old-chart "$CHART"
  cp -rf "examples/${BUILD_TARGET}/${CHART}" build/charts/

  # Update the chart placeholders
  edit-charts "build/charts/${CHART}/Chart.yaml" "${HELM_CHART_VERSION}" "${HELM_IMAGE_TAG}"
  package-charts "./build/charts/${CHART}" ./build/charts

  # Prepare chart for embedding location
  base64 -i "./build/charts/${CHART}-${HELM_CHART_VERSION}.tgz" > "cmd/${BUILD_TARGET}/fs/${CHART}.tgz.base64"
fi

echo "Completed ${CHART} (ver: ${HELM_CHART_VERSION:-"n/a"}) chart build process."