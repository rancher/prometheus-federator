#!/bin/bash
set -e
set -x

if ! hash helm 2>/dev/null; then
    echo "Helm is not installed"
    exit 1
fi

source "$(dirname "$0")/version"
source "$(dirname "$0")/util-chart"
source "$(dirname "$0")/util-team-charts"

cd "$(dirname "$0")/.."

# We don't do the full process for prometheus-federator
if [[ "${BUILD_TARGET}" == "prometheus-federator" ]]; then
  EMBEDDED_CHART_VERSION="0.3.4" # workaround until ready to remove chart lock
  CHART_VERSION=${EMBEDDED_CHART_VERSION:-$(newest-chart-version "rancher-project-monitoring")}
  # Fetch asset from github OB charts repo
  fetch-team-chart "rancher-project-monitoring" "$CHART_VERSION"

  rm -rf build/charts
  cp -rf charts build/

  if [[ "$REPO" != "rancher" ]]; then
    echo "Using custom repo: $REPO to build chart"
    edit-chart ./build/charts/prometheus-federator/Chart.yaml "${HELM_CHART_VERSION}" "${HELM_IMAGE_TAG}" "${REPO}"
  else
    edit-chart ./build/charts/prometheus-federator/Chart.yaml "${HELM_CHART_VERSION}" "${HELM_IMAGE_TAG}"
  fi
  if ! package-chart ./build/charts/prometheus-federator ./build/charts ; then
      echo "package-chart failed..."
      exit 1
  fi
  exit
fi

# TODO: get to the point where this can be removed
if [ "$BUILD_TARGET" == "helm-project-operator" ]; then
  DEFAULT_CHART_SOURCE="./packages/$BUILD_TARGET/charts"
elif [ "$BUILD_TARGET" == "helm-locker" ]; then
  DEFAULT_CHART_SOURCE="./examples/$BUILD_TARGET/helm-locker-chart-example"
fi

clean-old-charts "$BUILD_TARGET"
cp -rf "${DEFAULT_CHART_SOURCE}" "./build/charts/${BUILD_TARGET}"

edit-chart "./build/charts/${BUILD_TARGET}/Chart.yaml" "${HELM_CHART_VERSION}" "${HELM_IMAGE_TAG}"
package-chart "./build/charts/${BUILD_TARGET}"